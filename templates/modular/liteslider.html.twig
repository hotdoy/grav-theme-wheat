{% extends 'modular/module.html.twig' %}
{% set name = 'liteslider' %}
{% set title = title|default(page.header.display_title) %}
{% set collection = collection|default(null) %}
{% set items = items ?? page.header.items ?? collection  %}
{% block content %}



<div class="wrapper text">

	{% if title %}
	<h2>{{ title }}</h2>
	<a href=""></a>
	<pre style="color: red; font-family:monospace;font-size:12px;">
		<code>
Liteslider is not ready yet but here is some inspiring stuff.
https://developers.google.com/web/updates/2018/07/css-scroll-snap
https://snap.glitch.me/carousel.html
		</code>
	</pre>
	{% endif %}
	
	<div class="liteslider">
		<div class="liteslider-container">
			{% for item in items %}
			{% if not collection %}
			{% set item = page.find(item.page) %}
			{% endif %}	
			<div class="liteslider-slide">
				{% include ['partials/' ~ item.template ~ '-card.html.twig', 'partials/default-card.html.twig' ] with {'item': item, 'loop': loop} only %}
			</div>
			{% endfor %}
		</div>
		<span class="liteslider-prev"></span>
		<span class="liteslider-next"></span>
	</div>	


	<script>		
		const gallery = document.querySelector('#paginated_gallery');
		const litesliderContainer = gallery.querySelector('.liteslider-container');
		const gallery_item_size = litesliderContainer.querySelector('div').clientWidth;
		
		gallery.querySelector('.btn.next').addEventListener('click', scrollToNextPage);
		gallery.querySelector('.btn.prev').addEventListener('click', scrollToPrevPage);
		
		// For paginated scrolling, simply scroll the gallery one item in the given
		// direction and let css scroll snaping handle the specific alignment.
		function scrollToNextPage() {
		  litesliderContainer.scrollBy(gallery_item_size, 0);
		}
		function scrollToPrevPage() {
		  litesliderContainer.scrollBy(-gallery_item_size, 0);
		}
		
		function updateAlignment(event) {
		  const alignment = event.target.value;
		  for (item of gallery.querySelectorAll('.liteslider-container > .liteslider-slide'))
			item.style.scrollSnapAlign = alignment;
		
		  // Currently changing scroll alignment does not force a re-snap in Chrome.
		  // This is a bug: http://crbug.com/866127
		  // In meantime, if desired a scroll snap can be triggered using a small 
		  // scripted scroll e.g.: `litesliderContainer.scrollBy(1, 0);`
		}
		
		</script>

</div>

{% endblock %}
